// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace messages {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public static partial class Messages {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_messages_Vec3__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::messages.Vec3, global::messages.Vec3.Builder> internal__static_messages_Vec3__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_messages_Quat__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::messages.Quat, global::messages.Quat.Builder> internal__static_messages_Quat__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_messages_Color4__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::messages.Color4, global::messages.Color4.Builder> internal__static_messages_Color4__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_messages_MsgRpc__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::messages.MsgRpc, global::messages.MsgRpc.Builder> internal__static_messages_MsgRpc__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_messages_MsgCreateObj__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::messages.MsgCreateObj, global::messages.MsgCreateObj.Builder> internal__static_messages_MsgCreateObj__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_messages_MsgGetMissingCmd__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::messages.MsgGetMissingCmd, global::messages.MsgGetMissingCmd.Builder> internal__static_messages_MsgGetMissingCmd__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_messages_GenMessage__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::messages.GenMessage, global::messages.GenMessage.Builder> internal__static_messages_GenMessage__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static Messages() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "Cg5NZXNzYWdlcy5wcm90bxIIbWVzc2FnZXMiJwoEVmVjMxIJCgF4GAEgAigC" + 
          "EgkKAXkYAiACKAISCQoBehgDIAIoAiIyCgRRdWF0EgkKAXgYASACKAISCQoB" + 
          "eRgCIAIoAhIJCgF6GAMgAigCEgkKAXcYBCACKAIiNAoGQ29sb3I0EgkKAXIY" + 
          "ASACKAISCQoBZxgCIAIoAhIJCgFiGAMgAigCEgkKAWEYBCACKAIiNwoGTXNn" + 
          "UnBjEg0KBW5ldElkGAEgAigFEg4KBm1ldGhvZBgCIAIoCRIOCgZhcmdidWYY" + 
          "AyACKAwiVgoMTXNnQ3JlYXRlT2JqEgwKBHBhdGgYASACKAkSGwoDcG9zGAIg" + 
          "AigLMg4ubWVzc2FnZXMuVmVjMxIbCgNyb3QYAyACKAsyDi5tZXNzYWdlcy5R" + 
          "dWF0IjEKEE1zZ0dldE1pc3NpbmdDbWQSDgoGcGxheWVyGAEgAigJEg0KBWZy" + 
          "YW1lGAIgAigFImwKCkdlbk1lc3NhZ2USJgoHbXNnVHlwZRgBIAIoDjIVLm1l" + 
          "c3NhZ2VzLk1lc3NhZ2VUeXBlEgsKA3BJZBgCIAIoCRINCgVtc2dJZBgDIAIo" + 
          "BRILCgNidWYYBCABKAwSDQoFZnJhbWUYBSACKAUqbgoLTWVzc2FnZVR5cGUS" + 
          "DQoJQ3JlYXRlT2JqEAASBwoDUnBjEAESCAoEQXV0aBACEgkKBUVtcHR5EAMS" + 
          "DQoJQWRkUGxheWVyEAQSEQoNR2V0TWlzc2luZ0NtZBAFEhAKDFJlYWR5Rm9y" + 
          "R2FtZRAG");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_messages_Vec3__Descriptor = Descriptor.MessageTypes[0];
        internal__static_messages_Vec3__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::messages.Vec3, global::messages.Vec3.Builder>(internal__static_messages_Vec3__Descriptor,
                new string[] { "X", "Y", "Z", });
        internal__static_messages_Quat__Descriptor = Descriptor.MessageTypes[1];
        internal__static_messages_Quat__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::messages.Quat, global::messages.Quat.Builder>(internal__static_messages_Quat__Descriptor,
                new string[] { "X", "Y", "Z", "W", });
        internal__static_messages_Color4__Descriptor = Descriptor.MessageTypes[2];
        internal__static_messages_Color4__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::messages.Color4, global::messages.Color4.Builder>(internal__static_messages_Color4__Descriptor,
                new string[] { "R", "G", "B", "A", });
        internal__static_messages_MsgRpc__Descriptor = Descriptor.MessageTypes[3];
        internal__static_messages_MsgRpc__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::messages.MsgRpc, global::messages.MsgRpc.Builder>(internal__static_messages_MsgRpc__Descriptor,
                new string[] { "NetId", "Method", "Argbuf", });
        internal__static_messages_MsgCreateObj__Descriptor = Descriptor.MessageTypes[4];
        internal__static_messages_MsgCreateObj__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::messages.MsgCreateObj, global::messages.MsgCreateObj.Builder>(internal__static_messages_MsgCreateObj__Descriptor,
                new string[] { "Path", "Pos", "Rot", });
        internal__static_messages_MsgGetMissingCmd__Descriptor = Descriptor.MessageTypes[5];
        internal__static_messages_MsgGetMissingCmd__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::messages.MsgGetMissingCmd, global::messages.MsgGetMissingCmd.Builder>(internal__static_messages_MsgGetMissingCmd__Descriptor,
                new string[] { "Player", "Frame", });
        internal__static_messages_GenMessage__Descriptor = Descriptor.MessageTypes[6];
        internal__static_messages_GenMessage__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::messages.GenMessage, global::messages.GenMessage.Builder>(internal__static_messages_GenMessage__Descriptor,
                new string[] { "MsgType", "PId", "MsgId", "Buf", "Frame", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Enums
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public enum MessageType {
    CreateObj = 0,
    Rpc = 1,
    Auth = 2,
    Empty = 3,
    AddPlayer = 4,
    GetMissingCmd = 5,
    ReadyForGame = 6,
  }
  
  #endregion
  
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class Vec3 : pb::GeneratedMessage<Vec3, Vec3.Builder> {
    private Vec3() { }
    private static readonly Vec3 defaultInstance = new Vec3().MakeReadOnly();
    private static readonly string[] _vec3FieldNames = new string[] { "x", "y", "z" };
    private static readonly uint[] _vec3FieldTags = new uint[] { 13, 21, 29 };
    public static Vec3 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Vec3 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Vec3 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::messages.Messages.internal__static_messages_Vec3__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Vec3, Vec3.Builder> InternalFieldAccessors {
      get { return global::messages.Messages.internal__static_messages_Vec3__FieldAccessorTable; }
    }
    
    public const int XFieldNumber = 1;
    private bool hasX;
    private float x_;
    public bool HasX {
      get { return hasX; }
    }
    public float X {
      get { return x_; }
    }
    
    public const int YFieldNumber = 2;
    private bool hasY;
    private float y_;
    public bool HasY {
      get { return hasY; }
    }
    public float Y {
      get { return y_; }
    }
    
    public const int ZFieldNumber = 3;
    private bool hasZ;
    private float z_;
    public bool HasZ {
      get { return hasZ; }
    }
    public float Z {
      get { return z_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasX) return false;
        if (!hasY) return false;
        if (!hasZ) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _vec3FieldNames;
      if (hasX) {
        output.WriteFloat(1, field_names[0], X);
      }
      if (hasY) {
        output.WriteFloat(2, field_names[1], Y);
      }
      if (hasZ) {
        output.WriteFloat(3, field_names[2], Z);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasX) {
          size += pb::CodedOutputStream.ComputeFloatSize(1, X);
        }
        if (hasY) {
          size += pb::CodedOutputStream.ComputeFloatSize(2, Y);
        }
        if (hasZ) {
          size += pb::CodedOutputStream.ComputeFloatSize(3, Z);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Vec3 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Vec3 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Vec3 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Vec3 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Vec3 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Vec3 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Vec3 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Vec3 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Vec3 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Vec3 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Vec3 MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Vec3 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<Vec3, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Vec3 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Vec3 result;
      
      private Vec3 PrepareBuilder() {
        if (resultIsReadOnly) {
          Vec3 original = result;
          result = new Vec3();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Vec3 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::messages.Vec3.Descriptor; }
      }
      
      public override Vec3 DefaultInstanceForType {
        get { return global::messages.Vec3.DefaultInstance; }
      }
      
      public override Vec3 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Vec3) {
          return MergeFrom((Vec3) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Vec3 other) {
        if (other == global::messages.Vec3.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasX) {
          X = other.X;
        }
        if (other.HasY) {
          Y = other.Y;
        }
        if (other.HasZ) {
          Z = other.Z;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_vec3FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _vec3FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 13: {
              result.hasX = input.ReadFloat(ref result.x_);
              break;
            }
            case 21: {
              result.hasY = input.ReadFloat(ref result.y_);
              break;
            }
            case 29: {
              result.hasZ = input.ReadFloat(ref result.z_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasX {
        get { return result.hasX; }
      }
      public float X {
        get { return result.X; }
        set { SetX(value); }
      }
      public Builder SetX(float value) {
        PrepareBuilder();
        result.hasX = true;
        result.x_ = value;
        return this;
      }
      public Builder ClearX() {
        PrepareBuilder();
        result.hasX = false;
        result.x_ = 0F;
        return this;
      }
      
      public bool HasY {
        get { return result.hasY; }
      }
      public float Y {
        get { return result.Y; }
        set { SetY(value); }
      }
      public Builder SetY(float value) {
        PrepareBuilder();
        result.hasY = true;
        result.y_ = value;
        return this;
      }
      public Builder ClearY() {
        PrepareBuilder();
        result.hasY = false;
        result.y_ = 0F;
        return this;
      }
      
      public bool HasZ {
        get { return result.hasZ; }
      }
      public float Z {
        get { return result.Z; }
        set { SetZ(value); }
      }
      public Builder SetZ(float value) {
        PrepareBuilder();
        result.hasZ = true;
        result.z_ = value;
        return this;
      }
      public Builder ClearZ() {
        PrepareBuilder();
        result.hasZ = false;
        result.z_ = 0F;
        return this;
      }
    }
    static Vec3() {
      object.ReferenceEquals(global::messages.Messages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class Quat : pb::GeneratedMessage<Quat, Quat.Builder> {
    private Quat() { }
    private static readonly Quat defaultInstance = new Quat().MakeReadOnly();
    private static readonly string[] _quatFieldNames = new string[] { "w", "x", "y", "z" };
    private static readonly uint[] _quatFieldTags = new uint[] { 37, 13, 21, 29 };
    public static Quat DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Quat DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Quat ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::messages.Messages.internal__static_messages_Quat__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Quat, Quat.Builder> InternalFieldAccessors {
      get { return global::messages.Messages.internal__static_messages_Quat__FieldAccessorTable; }
    }
    
    public const int XFieldNumber = 1;
    private bool hasX;
    private float x_;
    public bool HasX {
      get { return hasX; }
    }
    public float X {
      get { return x_; }
    }
    
    public const int YFieldNumber = 2;
    private bool hasY;
    private float y_;
    public bool HasY {
      get { return hasY; }
    }
    public float Y {
      get { return y_; }
    }
    
    public const int ZFieldNumber = 3;
    private bool hasZ;
    private float z_;
    public bool HasZ {
      get { return hasZ; }
    }
    public float Z {
      get { return z_; }
    }
    
    public const int WFieldNumber = 4;
    private bool hasW;
    private float w_;
    public bool HasW {
      get { return hasW; }
    }
    public float W {
      get { return w_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasX) return false;
        if (!hasY) return false;
        if (!hasZ) return false;
        if (!hasW) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _quatFieldNames;
      if (hasX) {
        output.WriteFloat(1, field_names[1], X);
      }
      if (hasY) {
        output.WriteFloat(2, field_names[2], Y);
      }
      if (hasZ) {
        output.WriteFloat(3, field_names[3], Z);
      }
      if (hasW) {
        output.WriteFloat(4, field_names[0], W);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasX) {
          size += pb::CodedOutputStream.ComputeFloatSize(1, X);
        }
        if (hasY) {
          size += pb::CodedOutputStream.ComputeFloatSize(2, Y);
        }
        if (hasZ) {
          size += pb::CodedOutputStream.ComputeFloatSize(3, Z);
        }
        if (hasW) {
          size += pb::CodedOutputStream.ComputeFloatSize(4, W);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Quat ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Quat ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Quat ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Quat ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Quat ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Quat ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Quat ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Quat ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Quat ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Quat ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Quat MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Quat prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<Quat, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Quat cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Quat result;
      
      private Quat PrepareBuilder() {
        if (resultIsReadOnly) {
          Quat original = result;
          result = new Quat();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Quat MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::messages.Quat.Descriptor; }
      }
      
      public override Quat DefaultInstanceForType {
        get { return global::messages.Quat.DefaultInstance; }
      }
      
      public override Quat BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Quat) {
          return MergeFrom((Quat) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Quat other) {
        if (other == global::messages.Quat.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasX) {
          X = other.X;
        }
        if (other.HasY) {
          Y = other.Y;
        }
        if (other.HasZ) {
          Z = other.Z;
        }
        if (other.HasW) {
          W = other.W;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_quatFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _quatFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 13: {
              result.hasX = input.ReadFloat(ref result.x_);
              break;
            }
            case 21: {
              result.hasY = input.ReadFloat(ref result.y_);
              break;
            }
            case 29: {
              result.hasZ = input.ReadFloat(ref result.z_);
              break;
            }
            case 37: {
              result.hasW = input.ReadFloat(ref result.w_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasX {
        get { return result.hasX; }
      }
      public float X {
        get { return result.X; }
        set { SetX(value); }
      }
      public Builder SetX(float value) {
        PrepareBuilder();
        result.hasX = true;
        result.x_ = value;
        return this;
      }
      public Builder ClearX() {
        PrepareBuilder();
        result.hasX = false;
        result.x_ = 0F;
        return this;
      }
      
      public bool HasY {
        get { return result.hasY; }
      }
      public float Y {
        get { return result.Y; }
        set { SetY(value); }
      }
      public Builder SetY(float value) {
        PrepareBuilder();
        result.hasY = true;
        result.y_ = value;
        return this;
      }
      public Builder ClearY() {
        PrepareBuilder();
        result.hasY = false;
        result.y_ = 0F;
        return this;
      }
      
      public bool HasZ {
        get { return result.hasZ; }
      }
      public float Z {
        get { return result.Z; }
        set { SetZ(value); }
      }
      public Builder SetZ(float value) {
        PrepareBuilder();
        result.hasZ = true;
        result.z_ = value;
        return this;
      }
      public Builder ClearZ() {
        PrepareBuilder();
        result.hasZ = false;
        result.z_ = 0F;
        return this;
      }
      
      public bool HasW {
        get { return result.hasW; }
      }
      public float W {
        get { return result.W; }
        set { SetW(value); }
      }
      public Builder SetW(float value) {
        PrepareBuilder();
        result.hasW = true;
        result.w_ = value;
        return this;
      }
      public Builder ClearW() {
        PrepareBuilder();
        result.hasW = false;
        result.w_ = 0F;
        return this;
      }
    }
    static Quat() {
      object.ReferenceEquals(global::messages.Messages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class Color4 : pb::GeneratedMessage<Color4, Color4.Builder> {
    private Color4() { }
    private static readonly Color4 defaultInstance = new Color4().MakeReadOnly();
    private static readonly string[] _color4FieldNames = new string[] { "a", "b", "g", "r" };
    private static readonly uint[] _color4FieldTags = new uint[] { 37, 29, 21, 13 };
    public static Color4 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Color4 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Color4 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::messages.Messages.internal__static_messages_Color4__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Color4, Color4.Builder> InternalFieldAccessors {
      get { return global::messages.Messages.internal__static_messages_Color4__FieldAccessorTable; }
    }
    
    public const int RFieldNumber = 1;
    private bool hasR;
    private float r_;
    public bool HasR {
      get { return hasR; }
    }
    public float R {
      get { return r_; }
    }
    
    public const int GFieldNumber = 2;
    private bool hasG;
    private float g_;
    public bool HasG {
      get { return hasG; }
    }
    public float G {
      get { return g_; }
    }
    
    public const int BFieldNumber = 3;
    private bool hasB;
    private float b_;
    public bool HasB {
      get { return hasB; }
    }
    public float B {
      get { return b_; }
    }
    
    public const int AFieldNumber = 4;
    private bool hasA;
    private float a_;
    public bool HasA {
      get { return hasA; }
    }
    public float A {
      get { return a_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasR) return false;
        if (!hasG) return false;
        if (!hasB) return false;
        if (!hasA) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _color4FieldNames;
      if (hasR) {
        output.WriteFloat(1, field_names[3], R);
      }
      if (hasG) {
        output.WriteFloat(2, field_names[2], G);
      }
      if (hasB) {
        output.WriteFloat(3, field_names[1], B);
      }
      if (hasA) {
        output.WriteFloat(4, field_names[0], A);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasR) {
          size += pb::CodedOutputStream.ComputeFloatSize(1, R);
        }
        if (hasG) {
          size += pb::CodedOutputStream.ComputeFloatSize(2, G);
        }
        if (hasB) {
          size += pb::CodedOutputStream.ComputeFloatSize(3, B);
        }
        if (hasA) {
          size += pb::CodedOutputStream.ComputeFloatSize(4, A);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Color4 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Color4 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Color4 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Color4 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Color4 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Color4 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Color4 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Color4 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Color4 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Color4 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Color4 MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Color4 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<Color4, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Color4 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Color4 result;
      
      private Color4 PrepareBuilder() {
        if (resultIsReadOnly) {
          Color4 original = result;
          result = new Color4();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Color4 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::messages.Color4.Descriptor; }
      }
      
      public override Color4 DefaultInstanceForType {
        get { return global::messages.Color4.DefaultInstance; }
      }
      
      public override Color4 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Color4) {
          return MergeFrom((Color4) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Color4 other) {
        if (other == global::messages.Color4.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasR) {
          R = other.R;
        }
        if (other.HasG) {
          G = other.G;
        }
        if (other.HasB) {
          B = other.B;
        }
        if (other.HasA) {
          A = other.A;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_color4FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _color4FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 13: {
              result.hasR = input.ReadFloat(ref result.r_);
              break;
            }
            case 21: {
              result.hasG = input.ReadFloat(ref result.g_);
              break;
            }
            case 29: {
              result.hasB = input.ReadFloat(ref result.b_);
              break;
            }
            case 37: {
              result.hasA = input.ReadFloat(ref result.a_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasR {
        get { return result.hasR; }
      }
      public float R {
        get { return result.R; }
        set { SetR(value); }
      }
      public Builder SetR(float value) {
        PrepareBuilder();
        result.hasR = true;
        result.r_ = value;
        return this;
      }
      public Builder ClearR() {
        PrepareBuilder();
        result.hasR = false;
        result.r_ = 0F;
        return this;
      }
      
      public bool HasG {
        get { return result.hasG; }
      }
      public float G {
        get { return result.G; }
        set { SetG(value); }
      }
      public Builder SetG(float value) {
        PrepareBuilder();
        result.hasG = true;
        result.g_ = value;
        return this;
      }
      public Builder ClearG() {
        PrepareBuilder();
        result.hasG = false;
        result.g_ = 0F;
        return this;
      }
      
      public bool HasB {
        get { return result.hasB; }
      }
      public float B {
        get { return result.B; }
        set { SetB(value); }
      }
      public Builder SetB(float value) {
        PrepareBuilder();
        result.hasB = true;
        result.b_ = value;
        return this;
      }
      public Builder ClearB() {
        PrepareBuilder();
        result.hasB = false;
        result.b_ = 0F;
        return this;
      }
      
      public bool HasA {
        get { return result.hasA; }
      }
      public float A {
        get { return result.A; }
        set { SetA(value); }
      }
      public Builder SetA(float value) {
        PrepareBuilder();
        result.hasA = true;
        result.a_ = value;
        return this;
      }
      public Builder ClearA() {
        PrepareBuilder();
        result.hasA = false;
        result.a_ = 0F;
        return this;
      }
    }
    static Color4() {
      object.ReferenceEquals(global::messages.Messages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MsgRpc : pb::GeneratedMessage<MsgRpc, MsgRpc.Builder> {
    private MsgRpc() { }
    private static readonly MsgRpc defaultInstance = new MsgRpc().MakeReadOnly();
    private static readonly string[] _msgRpcFieldNames = new string[] { "argbuf", "method", "netId" };
    private static readonly uint[] _msgRpcFieldTags = new uint[] { 26, 18, 8 };
    public static MsgRpc DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MsgRpc DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MsgRpc ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::messages.Messages.internal__static_messages_MsgRpc__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MsgRpc, MsgRpc.Builder> InternalFieldAccessors {
      get { return global::messages.Messages.internal__static_messages_MsgRpc__FieldAccessorTable; }
    }
    
    public const int NetIdFieldNumber = 1;
    private bool hasNetId;
    private int netId_;
    public bool HasNetId {
      get { return hasNetId; }
    }
    public int NetId {
      get { return netId_; }
    }
    
    public const int MethodFieldNumber = 2;
    private bool hasMethod;
    private string method_ = "";
    public bool HasMethod {
      get { return hasMethod; }
    }
    public string Method {
      get { return method_; }
    }
    
    public const int ArgbufFieldNumber = 3;
    private bool hasArgbuf;
    private pb::ByteString argbuf_ = pb::ByteString.Empty;
    public bool HasArgbuf {
      get { return hasArgbuf; }
    }
    public pb::ByteString Argbuf {
      get { return argbuf_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasNetId) return false;
        if (!hasMethod) return false;
        if (!hasArgbuf) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRpcFieldNames;
      if (hasNetId) {
        output.WriteInt32(1, field_names[2], NetId);
      }
      if (hasMethod) {
        output.WriteString(2, field_names[1], Method);
      }
      if (hasArgbuf) {
        output.WriteBytes(3, field_names[0], Argbuf);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasNetId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, NetId);
        }
        if (hasMethod) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Method);
        }
        if (hasArgbuf) {
          size += pb::CodedOutputStream.ComputeBytesSize(3, Argbuf);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MsgRpc ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgRpc ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgRpc ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgRpc ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgRpc ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgRpc ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MsgRpc ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MsgRpc ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MsgRpc ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgRpc ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MsgRpc MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MsgRpc prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MsgRpc, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MsgRpc cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MsgRpc result;
      
      private MsgRpc PrepareBuilder() {
        if (resultIsReadOnly) {
          MsgRpc original = result;
          result = new MsgRpc();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MsgRpc MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::messages.MsgRpc.Descriptor; }
      }
      
      public override MsgRpc DefaultInstanceForType {
        get { return global::messages.MsgRpc.DefaultInstance; }
      }
      
      public override MsgRpc BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MsgRpc) {
          return MergeFrom((MsgRpc) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MsgRpc other) {
        if (other == global::messages.MsgRpc.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasNetId) {
          NetId = other.NetId;
        }
        if (other.HasMethod) {
          Method = other.Method;
        }
        if (other.HasArgbuf) {
          Argbuf = other.Argbuf;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRpcFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRpcFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasNetId = input.ReadInt32(ref result.netId_);
              break;
            }
            case 18: {
              result.hasMethod = input.ReadString(ref result.method_);
              break;
            }
            case 26: {
              result.hasArgbuf = input.ReadBytes(ref result.argbuf_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasNetId {
        get { return result.hasNetId; }
      }
      public int NetId {
        get { return result.NetId; }
        set { SetNetId(value); }
      }
      public Builder SetNetId(int value) {
        PrepareBuilder();
        result.hasNetId = true;
        result.netId_ = value;
        return this;
      }
      public Builder ClearNetId() {
        PrepareBuilder();
        result.hasNetId = false;
        result.netId_ = 0;
        return this;
      }
      
      public bool HasMethod {
        get { return result.hasMethod; }
      }
      public string Method {
        get { return result.Method; }
        set { SetMethod(value); }
      }
      public Builder SetMethod(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMethod = true;
        result.method_ = value;
        return this;
      }
      public Builder ClearMethod() {
        PrepareBuilder();
        result.hasMethod = false;
        result.method_ = "";
        return this;
      }
      
      public bool HasArgbuf {
        get { return result.hasArgbuf; }
      }
      public pb::ByteString Argbuf {
        get { return result.Argbuf; }
        set { SetArgbuf(value); }
      }
      public Builder SetArgbuf(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasArgbuf = true;
        result.argbuf_ = value;
        return this;
      }
      public Builder ClearArgbuf() {
        PrepareBuilder();
        result.hasArgbuf = false;
        result.argbuf_ = pb::ByteString.Empty;
        return this;
      }
    }
    static MsgRpc() {
      object.ReferenceEquals(global::messages.Messages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MsgCreateObj : pb::GeneratedMessage<MsgCreateObj, MsgCreateObj.Builder> {
    private MsgCreateObj() { }
    private static readonly MsgCreateObj defaultInstance = new MsgCreateObj().MakeReadOnly();
    private static readonly string[] _msgCreateObjFieldNames = new string[] { "path", "pos", "rot" };
    private static readonly uint[] _msgCreateObjFieldTags = new uint[] { 10, 18, 26 };
    public static MsgCreateObj DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MsgCreateObj DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MsgCreateObj ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::messages.Messages.internal__static_messages_MsgCreateObj__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MsgCreateObj, MsgCreateObj.Builder> InternalFieldAccessors {
      get { return global::messages.Messages.internal__static_messages_MsgCreateObj__FieldAccessorTable; }
    }
    
    public const int PathFieldNumber = 1;
    private bool hasPath;
    private string path_ = "";
    public bool HasPath {
      get { return hasPath; }
    }
    public string Path {
      get { return path_; }
    }
    
    public const int PosFieldNumber = 2;
    private bool hasPos;
    private global::messages.Vec3 pos_;
    public bool HasPos {
      get { return hasPos; }
    }
    public global::messages.Vec3 Pos {
      get { return pos_ ?? global::messages.Vec3.DefaultInstance; }
    }
    
    public const int RotFieldNumber = 3;
    private bool hasRot;
    private global::messages.Quat rot_;
    public bool HasRot {
      get { return hasRot; }
    }
    public global::messages.Quat Rot {
      get { return rot_ ?? global::messages.Quat.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasPath) return false;
        if (!hasPos) return false;
        if (!hasRot) return false;
        if (!Pos.IsInitialized) return false;
        if (!Rot.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgCreateObjFieldNames;
      if (hasPath) {
        output.WriteString(1, field_names[0], Path);
      }
      if (hasPos) {
        output.WriteMessage(2, field_names[1], Pos);
      }
      if (hasRot) {
        output.WriteMessage(3, field_names[2], Rot);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasPath) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Path);
        }
        if (hasPos) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Pos);
        }
        if (hasRot) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, Rot);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MsgCreateObj ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgCreateObj ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgCreateObj ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgCreateObj ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgCreateObj ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgCreateObj ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MsgCreateObj ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MsgCreateObj ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MsgCreateObj ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgCreateObj ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MsgCreateObj MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MsgCreateObj prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MsgCreateObj, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MsgCreateObj cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MsgCreateObj result;
      
      private MsgCreateObj PrepareBuilder() {
        if (resultIsReadOnly) {
          MsgCreateObj original = result;
          result = new MsgCreateObj();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MsgCreateObj MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::messages.MsgCreateObj.Descriptor; }
      }
      
      public override MsgCreateObj DefaultInstanceForType {
        get { return global::messages.MsgCreateObj.DefaultInstance; }
      }
      
      public override MsgCreateObj BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MsgCreateObj) {
          return MergeFrom((MsgCreateObj) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MsgCreateObj other) {
        if (other == global::messages.MsgCreateObj.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasPath) {
          Path = other.Path;
        }
        if (other.HasPos) {
          MergePos(other.Pos);
        }
        if (other.HasRot) {
          MergeRot(other.Rot);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgCreateObjFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgCreateObjFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasPath = input.ReadString(ref result.path_);
              break;
            }
            case 18: {
              global::messages.Vec3.Builder subBuilder = global::messages.Vec3.CreateBuilder();
              if (result.hasPos) {
                subBuilder.MergeFrom(Pos);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Pos = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::messages.Quat.Builder subBuilder = global::messages.Quat.CreateBuilder();
              if (result.hasRot) {
                subBuilder.MergeFrom(Rot);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Rot = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasPath {
        get { return result.hasPath; }
      }
      public string Path {
        get { return result.Path; }
        set { SetPath(value); }
      }
      public Builder SetPath(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPath = true;
        result.path_ = value;
        return this;
      }
      public Builder ClearPath() {
        PrepareBuilder();
        result.hasPath = false;
        result.path_ = "";
        return this;
      }
      
      public bool HasPos {
       get { return result.hasPos; }
      }
      public global::messages.Vec3 Pos {
        get { return result.Pos; }
        set { SetPos(value); }
      }
      public Builder SetPos(global::messages.Vec3 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPos = true;
        result.pos_ = value;
        return this;
      }
      public Builder SetPos(global::messages.Vec3.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPos = true;
        result.pos_ = builderForValue.Build();
        return this;
      }
      public Builder MergePos(global::messages.Vec3 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPos &&
            result.pos_ != global::messages.Vec3.DefaultInstance) {
            result.pos_ = global::messages.Vec3.CreateBuilder(result.pos_).MergeFrom(value).BuildPartial();
        } else {
          result.pos_ = value;
        }
        result.hasPos = true;
        return this;
      }
      public Builder ClearPos() {
        PrepareBuilder();
        result.hasPos = false;
        result.pos_ = null;
        return this;
      }
      
      public bool HasRot {
       get { return result.hasRot; }
      }
      public global::messages.Quat Rot {
        get { return result.Rot; }
        set { SetRot(value); }
      }
      public Builder SetRot(global::messages.Quat value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRot = true;
        result.rot_ = value;
        return this;
      }
      public Builder SetRot(global::messages.Quat.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRot = true;
        result.rot_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRot(global::messages.Quat value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRot &&
            result.rot_ != global::messages.Quat.DefaultInstance) {
            result.rot_ = global::messages.Quat.CreateBuilder(result.rot_).MergeFrom(value).BuildPartial();
        } else {
          result.rot_ = value;
        }
        result.hasRot = true;
        return this;
      }
      public Builder ClearRot() {
        PrepareBuilder();
        result.hasRot = false;
        result.rot_ = null;
        return this;
      }
    }
    static MsgCreateObj() {
      object.ReferenceEquals(global::messages.Messages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MsgGetMissingCmd : pb::GeneratedMessage<MsgGetMissingCmd, MsgGetMissingCmd.Builder> {
    private MsgGetMissingCmd() { }
    private static readonly MsgGetMissingCmd defaultInstance = new MsgGetMissingCmd().MakeReadOnly();
    private static readonly string[] _msgGetMissingCmdFieldNames = new string[] { "frame", "player" };
    private static readonly uint[] _msgGetMissingCmdFieldTags = new uint[] { 16, 10 };
    public static MsgGetMissingCmd DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MsgGetMissingCmd DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MsgGetMissingCmd ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::messages.Messages.internal__static_messages_MsgGetMissingCmd__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MsgGetMissingCmd, MsgGetMissingCmd.Builder> InternalFieldAccessors {
      get { return global::messages.Messages.internal__static_messages_MsgGetMissingCmd__FieldAccessorTable; }
    }
    
    public const int PlayerFieldNumber = 1;
    private bool hasPlayer;
    private string player_ = "";
    public bool HasPlayer {
      get { return hasPlayer; }
    }
    public string Player {
      get { return player_; }
    }
    
    public const int FrameFieldNumber = 2;
    private bool hasFrame;
    private int frame_;
    public bool HasFrame {
      get { return hasFrame; }
    }
    public int Frame {
      get { return frame_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasPlayer) return false;
        if (!hasFrame) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgGetMissingCmdFieldNames;
      if (hasPlayer) {
        output.WriteString(1, field_names[1], Player);
      }
      if (hasFrame) {
        output.WriteInt32(2, field_names[0], Frame);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasPlayer) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Player);
        }
        if (hasFrame) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, Frame);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MsgGetMissingCmd ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgGetMissingCmd ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgGetMissingCmd ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgGetMissingCmd ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgGetMissingCmd ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgGetMissingCmd ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MsgGetMissingCmd ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MsgGetMissingCmd ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MsgGetMissingCmd ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgGetMissingCmd ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MsgGetMissingCmd MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MsgGetMissingCmd prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MsgGetMissingCmd, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MsgGetMissingCmd cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MsgGetMissingCmd result;
      
      private MsgGetMissingCmd PrepareBuilder() {
        if (resultIsReadOnly) {
          MsgGetMissingCmd original = result;
          result = new MsgGetMissingCmd();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MsgGetMissingCmd MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::messages.MsgGetMissingCmd.Descriptor; }
      }
      
      public override MsgGetMissingCmd DefaultInstanceForType {
        get { return global::messages.MsgGetMissingCmd.DefaultInstance; }
      }
      
      public override MsgGetMissingCmd BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MsgGetMissingCmd) {
          return MergeFrom((MsgGetMissingCmd) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MsgGetMissingCmd other) {
        if (other == global::messages.MsgGetMissingCmd.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasPlayer) {
          Player = other.Player;
        }
        if (other.HasFrame) {
          Frame = other.Frame;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgGetMissingCmdFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgGetMissingCmdFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasPlayer = input.ReadString(ref result.player_);
              break;
            }
            case 16: {
              result.hasFrame = input.ReadInt32(ref result.frame_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasPlayer {
        get { return result.hasPlayer; }
      }
      public string Player {
        get { return result.Player; }
        set { SetPlayer(value); }
      }
      public Builder SetPlayer(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPlayer = true;
        result.player_ = value;
        return this;
      }
      public Builder ClearPlayer() {
        PrepareBuilder();
        result.hasPlayer = false;
        result.player_ = "";
        return this;
      }
      
      public bool HasFrame {
        get { return result.hasFrame; }
      }
      public int Frame {
        get { return result.Frame; }
        set { SetFrame(value); }
      }
      public Builder SetFrame(int value) {
        PrepareBuilder();
        result.hasFrame = true;
        result.frame_ = value;
        return this;
      }
      public Builder ClearFrame() {
        PrepareBuilder();
        result.hasFrame = false;
        result.frame_ = 0;
        return this;
      }
    }
    static MsgGetMissingCmd() {
      object.ReferenceEquals(global::messages.Messages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GenMessage : pb::GeneratedMessage<GenMessage, GenMessage.Builder> {
    private GenMessage() { }
    private static readonly GenMessage defaultInstance = new GenMessage().MakeReadOnly();
    private static readonly string[] _genMessageFieldNames = new string[] { "buf", "frame", "msgId", "msgType", "pId" };
    private static readonly uint[] _genMessageFieldTags = new uint[] { 34, 40, 24, 8, 18 };
    public static GenMessage DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GenMessage DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GenMessage ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::messages.Messages.internal__static_messages_GenMessage__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GenMessage, GenMessage.Builder> InternalFieldAccessors {
      get { return global::messages.Messages.internal__static_messages_GenMessage__FieldAccessorTable; }
    }
    
    public const int MsgTypeFieldNumber = 1;
    private bool hasMsgType;
    private global::messages.MessageType msgType_ = global::messages.MessageType.CreateObj;
    public bool HasMsgType {
      get { return hasMsgType; }
    }
    public global::messages.MessageType MsgType {
      get { return msgType_; }
    }
    
    public const int PIdFieldNumber = 2;
    private bool hasPId;
    private string pId_ = "";
    public bool HasPId {
      get { return hasPId; }
    }
    public string PId {
      get { return pId_; }
    }
    
    public const int MsgIdFieldNumber = 3;
    private bool hasMsgId;
    private int msgId_;
    public bool HasMsgId {
      get { return hasMsgId; }
    }
    public int MsgId {
      get { return msgId_; }
    }
    
    public const int BufFieldNumber = 4;
    private bool hasBuf;
    private pb::ByteString buf_ = pb::ByteString.Empty;
    public bool HasBuf {
      get { return hasBuf; }
    }
    public pb::ByteString Buf {
      get { return buf_; }
    }
    
    public const int FrameFieldNumber = 5;
    private bool hasFrame;
    private int frame_;
    public bool HasFrame {
      get { return hasFrame; }
    }
    public int Frame {
      get { return frame_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasMsgType) return false;
        if (!hasPId) return false;
        if (!hasMsgId) return false;
        if (!hasFrame) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _genMessageFieldNames;
      if (hasMsgType) {
        output.WriteEnum(1, field_names[3], (int) MsgType, MsgType);
      }
      if (hasPId) {
        output.WriteString(2, field_names[4], PId);
      }
      if (hasMsgId) {
        output.WriteInt32(3, field_names[2], MsgId);
      }
      if (hasBuf) {
        output.WriteBytes(4, field_names[0], Buf);
      }
      if (hasFrame) {
        output.WriteInt32(5, field_names[1], Frame);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasMsgType) {
          size += pb::CodedOutputStream.ComputeEnumSize(1, (int) MsgType);
        }
        if (hasPId) {
          size += pb::CodedOutputStream.ComputeStringSize(2, PId);
        }
        if (hasMsgId) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, MsgId);
        }
        if (hasBuf) {
          size += pb::CodedOutputStream.ComputeBytesSize(4, Buf);
        }
        if (hasFrame) {
          size += pb::CodedOutputStream.ComputeInt32Size(5, Frame);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GenMessage ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GenMessage ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GenMessage ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GenMessage ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GenMessage ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GenMessage ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GenMessage ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GenMessage ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GenMessage ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GenMessage ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GenMessage MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GenMessage prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GenMessage, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GenMessage cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GenMessage result;
      
      private GenMessage PrepareBuilder() {
        if (resultIsReadOnly) {
          GenMessage original = result;
          result = new GenMessage();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GenMessage MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::messages.GenMessage.Descriptor; }
      }
      
      public override GenMessage DefaultInstanceForType {
        get { return global::messages.GenMessage.DefaultInstance; }
      }
      
      public override GenMessage BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GenMessage) {
          return MergeFrom((GenMessage) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GenMessage other) {
        if (other == global::messages.GenMessage.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMsgType) {
          MsgType = other.MsgType;
        }
        if (other.HasPId) {
          PId = other.PId;
        }
        if (other.HasMsgId) {
          MsgId = other.MsgId;
        }
        if (other.HasBuf) {
          Buf = other.Buf;
        }
        if (other.HasFrame) {
          Frame = other.Frame;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_genMessageFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _genMessageFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.msgType_, out unknown)) {
                result.hasMsgType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              result.hasPId = input.ReadString(ref result.pId_);
              break;
            }
            case 24: {
              result.hasMsgId = input.ReadInt32(ref result.msgId_);
              break;
            }
            case 34: {
              result.hasBuf = input.ReadBytes(ref result.buf_);
              break;
            }
            case 40: {
              result.hasFrame = input.ReadInt32(ref result.frame_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMsgType {
       get { return result.hasMsgType; }
      }
      public global::messages.MessageType MsgType {
        get { return result.MsgType; }
        set { SetMsgType(value); }
      }
      public Builder SetMsgType(global::messages.MessageType value) {
        PrepareBuilder();
        result.hasMsgType = true;
        result.msgType_ = value;
        return this;
      }
      public Builder ClearMsgType() {
        PrepareBuilder();
        result.hasMsgType = false;
        result.msgType_ = global::messages.MessageType.CreateObj;
        return this;
      }
      
      public bool HasPId {
        get { return result.hasPId; }
      }
      public string PId {
        get { return result.PId; }
        set { SetPId(value); }
      }
      public Builder SetPId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPId = true;
        result.pId_ = value;
        return this;
      }
      public Builder ClearPId() {
        PrepareBuilder();
        result.hasPId = false;
        result.pId_ = "";
        return this;
      }
      
      public bool HasMsgId {
        get { return result.hasMsgId; }
      }
      public int MsgId {
        get { return result.MsgId; }
        set { SetMsgId(value); }
      }
      public Builder SetMsgId(int value) {
        PrepareBuilder();
        result.hasMsgId = true;
        result.msgId_ = value;
        return this;
      }
      public Builder ClearMsgId() {
        PrepareBuilder();
        result.hasMsgId = false;
        result.msgId_ = 0;
        return this;
      }
      
      public bool HasBuf {
        get { return result.hasBuf; }
      }
      public pb::ByteString Buf {
        get { return result.Buf; }
        set { SetBuf(value); }
      }
      public Builder SetBuf(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBuf = true;
        result.buf_ = value;
        return this;
      }
      public Builder ClearBuf() {
        PrepareBuilder();
        result.hasBuf = false;
        result.buf_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasFrame {
        get { return result.hasFrame; }
      }
      public int Frame {
        get { return result.Frame; }
        set { SetFrame(value); }
      }
      public Builder SetFrame(int value) {
        PrepareBuilder();
        result.hasFrame = true;
        result.frame_ = value;
        return this;
      }
      public Builder ClearFrame() {
        PrepareBuilder();
        result.hasFrame = false;
        result.frame_ = 0;
        return this;
      }
    }
    static GenMessage() {
      object.ReferenceEquals(global::messages.Messages.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
